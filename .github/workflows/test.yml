on:
  pull_request:
  workflow_dispatch:

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    permissions:
      checks: write

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: Gr1N/setup-poetry@v8

      - name: Install dependencies
        run: poetry install --without=benchmark

      - name: PyLint
        run: poetry run pylint isn_tractor/

      - name: Code formatting
        run: poetry run black --check .

      - name: Type checking
        run: poetry run mypy isn_tractor/

      - name: Tests
        run: poetry run pytest -m 'not benchmark' --junitxml=report.xml --cov=isn_tractor/ --cov-fail-under=45

      - name: Test report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Tests on Python ${{ matrix.python-version }}
          path: report.xml
          reporter: java-junit
  benchmark:
    name: "Performance regression tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - uses: Gr1N/setup-poetry@v8

      - name: "Install dependencies"
        run: poetry install

      - name: "Run benchmark"
        run: poetry run pytest test/test_benchmark.py -k 200_500 --benchmark-json output.json

      - name: Download previous benchmark data
        uses: actions/cache@v1
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: "pytest"
          output-file-path: "output.json"
          external-data-json-path: "./cache/benchmark-data.json"
          fail-on-alert: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-on-alert: true
          summary-always: true
